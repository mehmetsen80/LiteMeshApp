spring:
  application:
    name: api-gateway
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  redis:
    host: localhost
    port: 6379
  session:
    store-type: none #
  security:
    oauth2:
      client:
        registration:
          lite-mesh-gateway-client:
            client-id: lite-mesh-gateway-client
            client-secret: chFLPrOnco5yvNdLsdmH0itOzavuUYqz
            authorization-grant-type: client_credentials
            scope: gateway.read
            provider: keycloak  # identity-provider
        provider:
          keycloak:
            token-uri: http://localhost:8281/realms/LiteMesh/protocol/openid-connect/token
            authorization-uri: http://localhost:8281/realms/LiteMesh/protocol/openid-connect/auth
            jwk-set-uri: http://localhost:8281/realms/LiteMesh/protocol/openid-connect/certs
            issuer-uri: http://localhost:8281/realms/LiteMesh
      resourceserver:
        opaquetoken:
          introspection-uri: http://localhost:8281/realms/LiteMesh/protocol/openid-connect/token/introspect
          client-id: lite-mesh-gateway-client
          client-secret: chFLPrOnco5yvNdLsdmH0itOzavuUYqz
        jwt:
          issuer-uri: http://localhost:8281/realms/LiteMesh
          jwk-set-uri: http://localhost:8281/realms/LiteMesh/protocol/openid-connect/certs
  data:
    mongodb:
      uri:  mongodb://root:mongopw@localhost
      database: LiteMesh
  cloud:
    circuitbreaker:
      resilience4j:
        enabled: true #enable the Resilience4J auto-configuration
    gateway:
      httpserver:
        wiretap: true
      httpclient:
        wiretap: true
      discovery:
        locator:
          enabled: true # Enables service discovery with Eureka
          lower-case-service-id: true  # This ensures service IDs are matched in lowercase
      routes:
        ## Discover server route
        # so, our gateway port is 7777, we access the discovery server through http://localhost:7777/eureka/web
        # the filter is to reroute the request from http://localhost:7777/eureka/web to http://localhost:8761
      - id: discovery-server
        uri: http://localhost:8761
        predicates:
        - Path=/eureka/web
        filters:
          - SetPath=/

        ## Discovery server static resources
      - id: discovery-server-static
        uri: http://localhost:8761
        predicates:
        - Path=/eureka/**

        ## Mesh Service (Main Web User Interface)
      - id: mesh-service
        uri: lb://mesh-service
        predicates:
        - Path=/mesh/**

        ## Product Service (Just to Test) (This is being loaded dynamically from mongodb)
#      - id: product-service
#        uri: lb://product-service
#        predicates:
#        - Path=/product/**

#        ## Inventory Service (Just to Test) (This is being loaded dynamically from mongodb)
#      - id: inventory-service
#        uri: lb://inventory-service
#        predicates:
#        - Path=/inventory/**


management:
  endpoints:
    web:
      exposure:
        include: health,info,loggers,threaddump, metrics

eureka:
  client:
    service-url:
      defaultZone: https://localhost:8761/eureka
    enabled: true
    register-with-eureka: true
    fetch-registry: true
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${instanceId:${random.value}}
    non-secure-port-enabled: false   # Disable non-secure HTTP port
    secure-port-enabled: true        # Enable secure HTTPS port
    secure-port: ${server.port}

server:
  port: 7777
  ssl:
    enabled: true
    key-store: file:../../keys/gateway-keystore.jks
    key-store-password: 123456
    key-alias: gateway-app
    key-store-type: PKCS12
    trust-store: file:../../keys/gateway-truststore.jks
    trust-store-password: 123456
    trust-store-type: JKS
    client-auth: want


logging:
  file:
    name: logs/api-gateway.log
  level:
    root: INFO
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.web.reactive.function.client: DEBUG
    org.springframework.security.oauth2.client: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.loadbalancer: TRACE
    io.github.resilience4j.circuitbreaker: DEBUG
    io.github.resilience4j.circuitbreaker.internal: DEBUG
    org.springframework.cloud.gateway.route.RouteDefinitionLocator: INFO
    org.springframework.cloud.gateway.filter.ratelimit: DEBUG
    org.springframework.data.redis: DEBUG